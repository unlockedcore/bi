# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node_modules
node_modules/
*/node_modules/

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test
.env.production
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Editor directories and files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Docker
.dockerignore

# Database
*.sqlite
*.sqlite3
*.db

# Backup files
*.backup
*.bak
*.sql
*.dump

# Uploaded files
uploads/
api/uploads/

# Build artifacts
build/
dist/

# Package files
*.tar.gz
*.zip
*.rar

# Excel files (кроме примера)
*.xlsx
*.xls
!sample_data.csv

# PostgreSQL data (Docker volumes)
volumes/
postgres_data/

# Local development
.local
.cache

# IDE specific files
*.sublime-project
*.sublime-workspace

# Windows
*.exe
*.msi

# MacOS
*.dmg

# Linux
*.AppImage
*.deb
*.rpm

# Certificates
*.pem
*.key
*.crt
*.cert

# Configuration overrides
docker-compose.override.yml
docker-compose.local.yml

# Test files
test-results/
coverage/

# Temporary API files
api/temp/
api/tmp/

# Lock files (keep package-lock.json but ignore others)
yarn.lock
pnpm-lock.yaml

# Environment specific
.env.development
.env.staging
.env.production

# Monitoring and analytics
.nyc_output/
coverage/

# Documentation build
docs/_build/
docs/build/

# Python (if any Python scripts are added)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/

# Jupyter Notebook
.ipynb_checkpoints

# Local history
.history/

# VSCode settings (allow workspace settings but ignore user settings)
.vscode/settings.json
.vscode/launch.json
.vscode/extensions.json

# JetBrains IDEs
.idea/
*.iml
*.iws
*.ipr

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Local configuration
config.local.js
config.local.json

# Performance monitoring
.clinic/

# Runtime
*.pid
*.seed
*.pid.lock

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Rush dependency directories
common/deploy/
common/temp/
common/autoinstallers/*/.npmrc
.rush/

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*
